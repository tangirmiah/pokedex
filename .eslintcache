[{"/home/tangir/Documents/pokedex/src/index.js":"1","/home/tangir/Documents/pokedex/src/App.js":"2","/home/tangir/Documents/pokedex/src/components/Searchbar.js":"3","/home/tangir/Documents/pokedex/src/components/PokemonGrid.js":"4","/home/tangir/Documents/pokedex/src/components/PokemonCard.js":"5","/home/tangir/Documents/pokedex/src/components/PokemonDetail.js":"6","/home/tangir/Documents/pokedex/src/components/PokemonStats.js":"7"},{"size":432,"mtime":1608030413090,"results":"8","hashOfConfig":"9"},{"size":1903,"mtime":1608816880700,"results":"10","hashOfConfig":"9"},{"size":946,"mtime":1608777815520,"results":"11","hashOfConfig":"9"},{"size":1535,"mtime":1608778574200,"results":"12","hashOfConfig":"9"},{"size":1084,"mtime":1608207809890,"results":"13","hashOfConfig":"9"},{"size":13665,"mtime":1608819554710,"results":"14","hashOfConfig":"9"},{"size":1752,"mtime":1608761491560,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1do2pkj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/tangir/Documents/pokedex/src/index.js",[],["33","34"],"/home/tangir/Documents/pokedex/src/App.js",[],"/home/tangir/Documents/pokedex/src/components/Searchbar.js",["35"],"import SearchBar from \"material-ui-search-bar\";\nimport React, { useState } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nexport const Searchbar = (props) => {\n  const [searchItem, setSearchItem] = useState(\"\");\n\n  const searchHandler = (e) => {\n    console.log(props.pokemonList.filter((name) => name.name.includes(e)));\n    props.setSearchedList(\n      props.pokemonList.filter((name) => name.name.includes(e))\n    );\n  };\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={12} sm={12} lg={6}>\n          <SearchBar\n            value={searchItem}\n            onChange={(e) => searchHandler(e)}\n            onRequestSearch={(e) => searchHandler(e)}\n            onCancelSearch={() => {\n              props.setSearchedList(props.pokemonList);\n            }}\n            cancelOnEscape={true}\n            placeholder=\"Search Pokemon...\"\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","/home/tangir/Documents/pokedex/src/components/PokemonGrid.js",["36"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport PokemonCard from \"./PokemonCard\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport const PokemonGrid = ({\n  searchedList,\n  setSearchedList,\n  setPokemonList,\n}) => {\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    axios\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=386\")\n      .then((response) => {\n        const { results } = response.data;\n        //console.log(results);\n        const newPokemon = [];\n        results.forEach((pokemon, index) => {\n          newPokemon[index + 1] = {\n            id: index + 1,\n            name: pokemon.name,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n              index + 1\n            }.png`,\n          };\n        });\n        setPokemonList(newPokemon);\n        setSearchedList(newPokemon);\n        setLoading(false);\n      });\n  }, []);\n\n  const makesearchedList = () => {\n    return Object.keys(searchedList).map((key) => {\n      //   console.log(searchedList[key].name);\n      return (\n        <Grid item xs={12} sm={4} lg={3} key={searchedList[key].id}>\n          <PokemonCard pokemon={searchedList[key]} />\n        </Grid>\n      );\n    });\n  };\n\n  if (isLoading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <>\n      <Grid container spacing={2} justify=\"center\" style={{ margin: \"0 2vw\" }}>\n        {makesearchedList()}\n      </Grid>\n    </>\n  );\n};\n","/home/tangir/Documents/pokedex/src/components/PokemonCard.js",[],"/home/tangir/Documents/pokedex/src/components/PokemonDetail.js",["37"],"/home/tangir/Documents/pokedex/src/components/PokemonStats.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":22,"nodeType":"44","messageId":"45","endLine":7,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":33,"column":6,"nodeType":"48","endLine":33,"endColumn":8,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":79,"column":13,"nodeType":"51","endLine":193,"endColumn":4},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'setSearchItem' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setPokemonList' and 'setSearchedList'. Either include them or remove the dependency array. If 'setPokemonList' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["54"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [setPokemonList, setSearchedList]",{"range":"57","text":"58"},[1003,1005],"[setPokemonList, setSearchedList]"]